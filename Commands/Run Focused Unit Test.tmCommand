<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveActiveFile</string>
	<key>captureFormatString</key>
	<string>$0</string>
	<key>capturePattern</key>
	<string>(/[^:]+):(\d+)</string>
	<key>command</key>
	<string>#!/bin/sh

# Assumes the current file is a unittest file
# Runs with the currently-focused method as the test name

export TM_RUBY=$(type -p "${TM_RUBY:-ruby}")

args=$(${TM_RUBY} &lt;&lt;"EOF"

def parse_from_quotes(name)
  name.to_s.gsub(/^(?:.*"(.*)"|.*'(.*)').*$/) { $1 || $2 }
end

n = ENV['TM_LINE_NUMBER'].to_i

should, context = '', ''

File.open(ENV['TM_FILEPATH']) do |f|
  lines     = f.read.split("\n")[0...n].reverse
  context   = lines.find { |line| line =~ /^\s*context\b/ } || ''
  should    = parse_from_quotes(lines.find { |line| line =~ /^\s*should\b/ }) || ''
end

if !context.empty? &amp;&amp; !should.empty?
  puts "shoulda"
  context = parse_from_quotes( context )
  name = "#{context} should #{should}".gsub(/[\+\.\s\'\"\(\)]/,'.')
  print "--name=/#{name}/ -v v"  
elsif !should.empty?
  name = should.gsub(/[\+\.\s\'\"\(\)]/,'.')
  print "--name=/#{name}/ -v v"  
end

EOF)

if [[ -z "$args" ]]; then
  echo -e "This doesn't appear to be a TestCase class."
  exit_show_tool_tip
fi

# original:
#export RUBYLIB="$TM_BUNDLE_SUPPORT/RubyMate${RUBYLIB:+:$RUBYLIB}"
#export TM_RUBY=$(type -p "${TM_RUBY:-ruby}")
#"${TM_RUBY}" -KU -- "$TM_BUNDLE_SUPPORT/RubyMate/run_script.rb"

# original shoulda bundle:
# export RUBYLIB="$TM_BUNDLE_SUPPORT/RubyMate${RUBYLIB:+:$RUBYLIB}"
# "${TM_RUBY:-ruby}" -- "$TM_BUNDLE_SUPPORT/RubyMate/run_script.rb" $args

export RUBYLIB="$TM_BUNDLE_SUPPORT/RubyMate${RUBYLIB:+:$RUBYLIB}"
"${TM_RUBY}" -KU -- "$TM_BUNDLE_SUPPORT/RubyMate/run_script.rb" $args
</string>
	<key>fileCaptureRegister</key>
	<string>1</string>
	<key>input</key>
	<string>document</string>
	<key>keyEquivalent</key>
	<string>@R</string>
	<key>lineCaptureRegister</key>
	<string>2</string>
	<key>name</key>
	<string>Run Focused Should</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>scope</key>
	<string>source.ruby.rails.shoulda</string>
	<key>uuid</key>
	<string>6AFF5956-7774-4175-A005-9A03AF7F29B3</string>
</dict>
</plist>
